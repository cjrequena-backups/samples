package com.sample.euler.solutions;

/*------------------------------------------------------------------------------------------------------------------------------------
 ==========
 Problem002
 ==========

 Even fibonacci numbers

 Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, 
 the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

 By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 ------------------------------------------------------------------------------------------------------------------------------------*/
public class Problem002 {

	public static void main(String[] args) {
		new Problem002().run();
	}

	public void run() {
		// f(n)=f(n-1) + f(n-2)
		int n = 2;
		int[] f = new int[35];
		f[1] = 1;
		f[2] = 2;
		int sumEvenNumber = 0;
		while (true) {
			f[n] = f[n - 1] + f[n - 2];
			// if f(n) is even
			if (f[n] % 2 == 0) {
				sumEvenNumber += f[n];
			}
			if (f[n] > 4000000) {
				System.out.println("length " + f.length);
				System.out.println("sumEvenNumber " + sumEvenNumber);
				break;
			}
			n++;

		}
	}
}
